- name: functions
  hosts: localhost
  connection: local
  vars:
    technologies: DevOps,Linux,Shell,Ansible        # string
    name: "SivakUmar reddy M"
    gmail: Info@GMAIL.COM
    # ipaddress: 345.4329.43209.4332        # wrong ip address
    ipaddress: 192.168.109.103              # correct ip address
    # dictionary == map
    tags:
      Application: payment
      Environment: dev
    # List
    listTags:
    - key: Application
      value: payment
    - key: Environment
      value: dev    

  tasks:
  - name: default variable
    ansible.builtin.debug:
    #  msg: "Hello, {{ name }}"       # u got error because u did not define name elsewhere
       msg: "Hello, {{ name | default ('RAMESH') }}"    # it will take default ramesh value

  # string to list
  - name: convert string to list
    ansible.builtin.debug:
      msg: "Technologies are : {{ technologies | split(',') }}"

  - name: convert map to list
    ansible.builtin.debug:
      msg: "Tags are: {{ tags | dict2items }}"

  - name: convert list into map
    ansible.builtin.debug:
      msg: "tag map: {{ listTags | items2dict }}"

  - name: read yaml and take it into variable
    ansible.builtin.set_fact:
      student_yml: "{{ lookup('file','student.yml') | from_yaml }}"

  - name: convert yaml into json
    ansible.builtin.debug:
      msg: "json: {{ student_yml | to_json }}"

  - name: save json to file
    ansible.builtin.copy:
      dest: ./student.data-json
      content: "{{ student_yml |  to_nice_json }}"

  - name: convert uppercase
    ansible.builtin.debug:
      msg: "{{ name | upper }}"

  - name: convert lowercase
    ansible.builtin.debug:
      msg: "{{ gmail | lower }}"

  - name: check IP valid or not
    ansible.builtin.debug:  
      msg: "{{ ipaddress | ansible.utils.ipv4 }}"


  - name: grep for root
    ansible.builtin.command: cat /etc/passwd | grep root            # for simple tasks
    # ansible.builtin.shell: cat /etc/passwd | grep root                # for complex tasks
    register: command_output 
      
  - name: print the command_output
    ansible.builtin.debug:
      msg: "{{ command_output }}"